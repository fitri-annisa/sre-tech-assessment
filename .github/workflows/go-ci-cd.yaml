name: CI/CD for Go App

on:
  push:
    branches:
    - master
    paths:
    - 'golang/**'
  workflow_dispatch:

jobs:
  code-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22.0

      - name: Run Go tests
        run: |
          cd golang
          go test ./...

  build-and-push:
    needs: [code-test]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Go image
        uses: docker/build-push-action@v2
        with:
          context: ./golang
          push: true
          tags: fitrinshl/sre-tech-assessment:golang
          platforms: linux/arm64,linux/amd64

  deploy:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v1

      - name: Start minikube
        id: start_minikube
        uses: medyagh/setup-minikube@master

      # Testing kubectl
      # - name: Run kubectl
      #   run: |
      #     minikube kubectl -- get pods --all-namespaces

      # - name: Apply k8s manifest
      #   run: |
      #     kubectl apply -f ./manifest/golang-k8s.yaml

      # Render and Upgrade Helm
      - uses: azure/k8s-bake@v2
        with:
          renderEngine: 'helm'
          helmChart: './go-helm-chart/'
        id: bake

      - uses: Azure/k8s-deploy@v1.2
        with:
          action: deploy
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
      
      - name: Wait for pods to be running
        run: |
          while true; do
            RUNNING=$(kubectl get pods --field-selector=status.phase=Running --no-headers | wc -l)
            TOTAL=$(kubectl get pods --no-headers | wc -l)
            if [ "$RUNNING" -eq "$TOTAL" ]; then
              echo "All pods are running."
              break
            else
              echo "Not all pods are running. Waiting..."
              kubectl get pods
              kubectl get events
              sleep 20
            fi
          done

      - name: Check resources
        run: |
          minikube kubectl -- get deployment
          minikube kubectl -- get svc
          minikube kubectl -- get ingress
      
      - name: Test service URLs if use manifest
        run: |
          curl $(minikube service go-app-by-helm --url)
        # curl $(minikube service go-service --url)
